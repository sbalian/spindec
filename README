SpinDec - C++ library for spin decoherence
==========================================

Solves for the many-body dynamics of a central spin system coupled to an interacting spin bath.

- Implements the cluster correlation expansion.
- Includes special methods for donor qubits in silicon.

Installation
------------

Requirements:

- [Eigen]: Open-source linear algebra package.
- Optional: Intel MKL optimization for Eigen.

```sh
mkdir spindec
cd spindec
hg clone http://www.bitbucket.org/sbalian/spindec .
mkdir build
cd build
cmake ..
make
```

This will build the library and some tests. Move the library and headers to your favourite location and make sure your compiler knows about them. SpinDec has been tested on Linux and Mac OS X.

- Modify spindec/CMakeLists.txt to customize.
- Eigen can take advantage of Intel MKL.

Usage
-----

Include the SpinDec/base.h header in your source and link with libspindec.

Version
-------

0.9 (late-stage beta - debugged, tested, profiled, optimized)

Getting help
------------

- Help is given in header files (.h extension).
- Source files (.cpp extension) may contain more information, usually geared more towards implementation.
- Main source files also contain helpful comments.
- see tests/test_cce.cpp for a good example.

License and how to cite
-----------------------

**Free software! (GNU General Public License)**

See LICENSE file.

If you use SpinDec in a publication, please cite it as follows:

S. J. Balian, Spindec: C++ library for spin decoherence, http://www.bitbucket.org/sbalian/spindec (2011-2014).

Here is the BibTeX entry:

```text
@misc{SPINDEC,
  title = {SpinDec: C++ library for spin decoherence},
  author = {Balian, Setrak J.},
  howpublished = {\url{http://www.bitbucket.org/sbalian/spindec}},
  year = {2011--2014}
}
```

Acknowledgements
----------------

- Tania Monteiro
- Martin Uhrin
- Wayne Witzel
- Gavin Morley
- Leonardo Banchi

History
-------

SpinDec is based on bits and pieces of old code for certain spin baths and central spin systems. These were written by Seto Balian starting in 2011. Methods used to efficiently fill Hamiltonian matrix elements were originally written in Fortran by Tania Monteiro. This version was started on May 19, 2013.

Contact
-------

[Seto Balian] ([sbalian]) - <seto.balian@gmail.com>

**Last updated: Nov 7, 2014**


[Eigen]:http://eigen.tuxfamily.org
[Seto Balian]:http://www.ucl.ac.uk/~zcapc07
[sbalian]:http://www.bitbucket.org/sbalian

